[project]
# we set the version statically.
# git-annex uses a version scheme that needs to be amended to match
# PyPi's requirements. Moreover, for any given upstream version,
# we must be able to build multiple package versions.
version = "10.20250605.post1"
authors = [
  { name = "Joey Hess", email = "id@joeyh.name" },
]
classifiers = [
  "Development Status :: 6 - Mature",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: End Users/Desktop",
  "Intended Audience :: Information Technology",
  "Intended Audience :: Science/Research",
  "License :: DFSG approved",
  "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
  "Natural Language :: English",
  "Operating System :: MacOS",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Programming Language :: Haskell",
  "Topic :: Software Development :: Version Control",
  "Topic :: Software Development :: Version Control :: Git",
  "Topic :: System :: Archiving :: Backup",
  "Topic :: System :: Archiving :: Mirroring",
  "Topic :: System :: Archiving :: Packaging",
  "Topic :: Utilities",
]
description = "manage files with git, without checking their contents into git"
keywords = [
  "git",
  "data logistics",
  "version control",
]
license = "AGPL-3.0-or-later"
maintainers = [
  { name = "Michael Hanke", email = "mih@ngln.eu" },
]
name = "git-annex"
readme = "README.md"
requires-python = ">=3.9"

[project.scripts]
git-annex = "git_annex:cli"
git-annex-shell = "git_annex:cli"
git-remote-annex = "git_annex:cli"
git-remote-tor-annex = "git_annex:cli"

[project.urls]
Homepage = "https://git-annex.branchable.com/"
Documentation = "https://git-annex.branchable.com/git-annex"
Issues = "https://git-annex.branchable.com/bugs"
Source = "http://source.git-annex.branchable.com/?p=source.git"
Changelog = "http://source.git-annex.branchable.com/?p=source.git;a=blob;f=CHANGELOG;hb=HEAD"

[build-system]
requires = [
  "hatchling",
]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/git_annex"]

[tool.hatch.build.targets.wheel.sources]
# give the 'only-include' files a base directory in the wheel
"python" = "git-annex"

[tool.hatch.build.targets.wheel.hooks.custom]
# custom build hook to set some metadata
path = "hatch/build_hook_plugin.py"
# if set, actually perform a build. Otherwise assume that
# the built binary is in bin/
#build = "stack"
